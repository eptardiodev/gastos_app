plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
//    id "com.google.gms.google-services"
//    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdkVersion 34
    android {
        namespace "com.ept.gastosapp.gastos_app"
    }

    kotlinOptions {
        jvmTarget = "17"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.ept.gastosapp.gastos_app"
        minSdkVersion 28
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

//    signingConfigs {
//        release {
////            keyAlias keystoreProperties['keyAlias']
////            keyPassword keystoreProperties['keyPassword']
////            storeFile file(keystoreProperties['storeFile'])
////            storePassword keystoreProperties['storePassword']
//        }
//        debug {
////            keyAlias keystoreProperties['keyAlias']
////            keyPassword keystoreProperties['keyPassword']
////            storeFile file(keystoreProperties['storeFile'])
////            storePassword keystoreProperties['storePassword']
//        }
//        profile {
////            keyAlias keystoreProperties['keyAlias']
////            keyPassword keystoreProperties['keyPassword']
////            storeFile file(keystoreProperties['storeFile'])
////            storePassword keystoreProperties['storePassword']
//        }
//    }

    buildTypes {
//        release {
//            signingConfig signingConfigs.release
//            shrinkResources true
//            minifyEnabled true
//        }
        debug {
            signingConfig signingConfigs.debug
            shrinkResources true
            minifyEnabled true
        }
//        profile {
//            signingConfig signingConfigs.profile
//            shrinkResources true
//            minifyEnabled true
//        }
    }
}

flutter {
    source '../..'
}

dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.4'
    implementation('androidx.appcompat:appcompat') {
        version {
            strictly '1.3.1'
        }
    }
//    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.2.10'
}

//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'
